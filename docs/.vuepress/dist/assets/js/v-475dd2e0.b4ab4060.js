"use strict";(self.webpackChunklaravel_update_info=self.webpackChunklaravel_update_info||[]).push([[238],{3424:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-475dd2e0",path:"/laravel8/v8.0-v8.9/",title:"v8.0-v8.9",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"paginationにlinksプロパティーが追加",slug:"paginationにlinksプロパティーが追加",children:[]},{level:2,title:"Testクラス内でjson型のカラムと比較できるcastAsJson()メソッドが追加",slug:"testクラス内でjson型のカラムと比較できるcastasjson-メソッドが追加",children:[]},{level:2,title:"キュー処理のジョブバッチで使用するbatchメソッドにクロージャ（無名関数）を渡せるように",slug:"キュー処理のジョブバッチで使用するbatchメソッドにクロージャ-無名関数-を渡せるように",children:[]},{level:2,title:"ジョブをクリアできるphp artisan queue:clearコマンドが追加",slug:"ジョブをクリアできるphp-artisan-queue-clearコマンドが追加",children:[]},{level:2,title:"クエリービルダにcrossJoinSub()メソッド追加",slug:"クエリービルダにcrossjoinsub-メソッド追加",children:[]},{level:2,title:"LazyCollectionにタイムアウトを設定できるように",slug:"lazycollectionにタイムアウトを設定できるように",children:[]},{level:2,title:"Httpクライアントでのレスポンスエラー発生時にonError()でコールバック処理ができるように",slug:"httpクライアントでのレスポンスエラー発生時にonerror-でコールバック処理ができるように",children:[]},{level:2,title:"CollectionにpipeInto()メソッドが追加されました",slug:"collectionにpipeinto-メソッドが追加されました",children:[]},{level:2,title:"HttpクライアントでuserAgentをセットするwithUserAgent()メソッドが追加",slug:"httpクライアントでuseragentをセットするwithuseragent-メソッドが追加",children:[]},{level:2,title:"スケジュールをローカルで実行できるphp artisan schedule:workが追加",slug:"スケジュールをローカルで実行できるphp-artisan-schedule-workが追加",children:[]},{level:2,title:"paginatorのアイテムを変換できるthrough()メソッドが追加",slug:"paginatorのアイテムを変換できるthrough-メソッドが追加",children:[]}],filePathRelative:"laravel8/v8.0-v8.9/README.md",git:{updatedTime:1641803772e3,contributors:[{name:"okdyy75",email:"okdyy75@gmail.com",commits:2}]}}},2999:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Q});var t=a(6252);const p=(0,t.uE)('<h1 id="v8-0-v8-9" tabindex="-1"><a class="header-anchor" href="#v8-0-v8-9" aria-hidden="true">#</a> v8.0-v8.9</h1><h2 id="paginationにlinksプロパティーが追加" tabindex="-1"><a class="header-anchor" href="#paginationにlinksプロパティーが追加" aria-hidden="true">#</a> paginationにlinksプロパティーが追加</h2><ul><li>v8.0.3</li><li>src/Illuminate/Pagination/LengthAwarePaginator.php</li></ul><p>こんなふうにpaginateをjsonで返した場合にlinksプロパティーが追加されました。linksプロパティーの詳細は「laravel pagination カスタマイズ」で検索！</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/users&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token punctuation">{</span>\n    <span class="token string double-quoted-string">&quot;total&quot;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;per_page&quot;</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;current_page&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;last_page&quot;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;first_page_url&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;http://laravel.app?page=1&quot;</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;last_page_url&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;http://laravel.app?page=4&quot;</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;next_page_url&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;http://laravel.app?page=2&quot;</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;prev_page_url&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;path&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;http://laravel.app&quot;</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;from&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;to&quot;</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n    <span class="token string double-quoted-string">&quot;data&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>\n            <span class="token comment">// レコード…</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>\n            <span class="token comment">// レコード…</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// ↓追加された</span>\n    <span class="token string double-quoted-string">&quot;links&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token string double-quoted-string">&quot;url&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;&amp;laquo; Previous&quot;</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;active&quot;</span><span class="token punctuation">:</span> <span class="token constant boolean">false</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token string double-quoted-string">&quot;url&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;http://laravel.app?page=1&quot;</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;1&quot;</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;active&quot;</span><span class="token punctuation">:</span> <span class="token constant boolean">true</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        <span class="token string double-quoted-string">&quot;url&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;label&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Next &amp;raquo;&quot;</span><span class="token punctuation">,</span>\n        <span class="token string double-quoted-string">&quot;active&quot;</span><span class="token punctuation">:</span> <span class="token constant boolean">false</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div>',6),e={href:"https://github.com/laravel/framework/commit/13751a187834fabe515c14fb3ac1dc008fd23f37",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("https://github.com/laravel/framework/commit/13751a187834fabe515c14fb3ac1dc008fd23f37"),l=(0,t.uE)('<h2 id="testクラス内でjson型のカラムと比較できるcastasjson-メソッドが追加" tabindex="-1"><a class="header-anchor" href="#testクラス内でjson型のカラムと比較できるcastasjson-メソッドが追加" aria-hidden="true">#</a> Testクラス内でjson型のカラムと比較できる<code>castAsJson()</code>メソッドが追加</h2><ul><li>v8.3.0</li><li>src/Illuminate/Foundation/Testing/Concerns/InteractsWithDatabase.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertDatabaseHas</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Peter Parker&#39;</span><span class="token punctuation">,</span>\n    <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;spidey@yahoo.com&#39;</span><span class="token punctuation">,</span>\n    <span class="token string single-quoted-string">&#39;skills&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">castAsJson</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;web slinging&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;spidey-sense&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;sticky feet&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',3),c={href:"https://github.com/laravel/framework/pull/34302",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("https://github.com/laravel/framework/pull/34302"),u=(0,t.uE)('<h2 id="キュー処理のジョブバッチで使用するbatchメソッドにクロージャ-無名関数-を渡せるように" tabindex="-1"><a class="header-anchor" href="#キュー処理のジョブバッチで使用するbatchメソッドにクロージャ-無名関数-を渡せるように" aria-hidden="true">#</a> キュー処理のジョブバッチで使用するbatchメソッドにクロージャ（無名関数）を渡せるように</h2><ul><li>v8.3.0</li><li>src/Illuminate/Bus/Batch.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Bus</span><span class="token operator">::</span><span class="token function">batch</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">ProcessPodcast</span><span class="token punctuation">,</span>\n    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">ReleasePodcast</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',3),i={href:"https://github.com/laravel/framework/pull/34333",target:"_blank",rel:"noopener noreferrer"},k=(0,t.Uk)("https://github.com/laravel/framework/pull/34333"),b=(0,t.uE)('<h2 id="ジョブをクリアできるphp-artisan-queue-clearコマンドが追加" tabindex="-1"><a class="header-anchor" href="#ジョブをクリアできるphp-artisan-queue-clearコマンドが追加" aria-hidden="true">#</a> ジョブをクリアできる<code>php artisan queue:clear</code>コマンドが追加</h2><ul><li>v8.4.0</li><li>src/Illuminate/Queue/Console/ClearCommand.php</li></ul><p>ジョブ（jobsテーブル）はクリアできるけど、ジョブバッチ（job_batchesテーブル）、失敗したジョブ（failed_jobsテーブル）には残るので注意</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>php artisan queue:clear\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',4),d={href:"https://github.com/laravel/framework/pull/34330",target:"_blank",rel:"noopener noreferrer"},g=(0,t.Uk)("https://github.com/laravel/framework/pull/34330"),m=(0,t._)("h2",{id:"クエリービルダにcrossjoinsub-メソッド追加",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#クエリービルダにcrossjoinsub-メソッド追加","aria-hidden":"true"},"#"),(0,t.Uk)(" クエリービルダに"),(0,t._)("code",null,"crossJoinSub()"),(0,t.Uk)("メソッド追加")],-1),h=(0,t._)("ul",null,[(0,t._)("li",null,"v8.5.0"),(0,t._)("li",null,"src/Illuminate/Database/Query/Builder.php")],-1),v=(0,t._)("p",null,"joinSub、leftJoinSub、rightJoinSubに加えてcrossJoinSubが追加",-1),f={href:"https://github.com/laravel/framework/pull/34400",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("https://github.com/laravel/framework/pull/34400"),_={href:"https://readouble.com/laravel/8.x/ja/queries#subquery-joins",target:"_blank",rel:"noopener noreferrer"},w=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/queries#subquery-joins"),y=(0,t.uE)('<h2 id="lazycollectionにタイムアウトを設定できるように" tabindex="-1"><a class="header-anchor" href="#lazycollectionにタイムアウトを設定できるように" aria-hidden="true">#</a> LazyCollectionにタイムアウトを設定できるように</h2><ul><li>v8.6.0</li><li>src/Illuminate/Collections/LazyCollection.php</li></ul><p>LazyCollectionにタイムアウトを設定できるようになりました。</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$lazyCollection</span>\n    <span class="token operator">-&gt;</span><span class="token function">takeUntilTimeout</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;minutes&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">fn</span> <span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">doSomethingThatMayTakeSomeTime</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n \n<span class="token comment">// ^^ This will only process items for up to 2 minutes ^^</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="httpクライアントでのレスポンスエラー発生時にonerror-でコールバック処理ができるように" tabindex="-1"><a class="header-anchor" href="#httpクライアントでのレスポンスエラー発生時にonerror-でコールバック処理ができるように" aria-hidden="true">#</a> Httpクライアントでのレスポンスエラー発生時に<code>onError()</code>でコールバック処理ができるように</h2><ul><li>v8.7.0</li><li>src/Illuminate/Http/Client/Response.php</li></ul><p><code>throw()</code>との違いは例外を投げるかどうかです。</p><p>Before</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name static-context">Log</span><span class="token operator">::</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Twitter API failed posting Tweet&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n        <span class="token string single-quoted-string">&#39;url&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$url</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;payload&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$payload</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;headers&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$headers</span><span class="token punctuation">,</span>\n        <span class="token string single-quoted-string">&#39;response&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">return</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>After</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token variable">$client</span><span class="token operator">-&gt;</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token variable">$payload</span><span class="token punctuation">)</span>\n    <span class="token operator">-&gt;</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">fn</span> <span class="token punctuation">(</span><span class="token variable">$response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\n        <span class="token class-name static-context">Log</span><span class="token operator">::</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Twitter API failed posting Tweet&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;url&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$url</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;payload&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$payload</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;headers&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$headers</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;response&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>',11),$={href:"https://github.com/laravel/framework/pull/34558",target:"_blank",rel:"noopener noreferrer"},x=(0,t.Uk)("https://github.com/laravel/framework/pull/34558"),j=(0,t.uE)('<h2 id="collectionにpipeinto-メソッドが追加されました" tabindex="-1"><a class="header-anchor" href="#collectionにpipeinto-メソッドが追加されました" aria-hidden="true">#</a> Collectionに<code>pipeInto()</code>メソッドが追加されました</h2><ul><li>v8.8.0</li><li>src/Illuminate/Collections/Traits/EnumeratesValues.php</li></ul><p>APIリソースを返す時に使えそうです</p><h4 id="pipeinto" tabindex="-1"><a class="header-anchor" href="#pipeinto" aria-hidden="true">#</a> pipeInto</h4><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">ResourceCollection</span>\n<span class="token punctuation">{</span>\n    <span class="token doc-comment comment">/**\n     * コレクションインスタンス\n     */</span>\n    <span class="token keyword">public</span> <span class="token variable">$collection</span><span class="token punctuation">;</span>\n\n    <span class="token doc-comment comment">/**\n     * 新しいResourceCollectionインスタンスの生成\n     *\n     * <span class="token keyword">@param</span>  <span class="token class-name">Collection</span>  <span class="token parameter">$collection</span>\n     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>\n     */</span>\n    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Collection</span> <span class="token variable">$collection</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">collection</span> <span class="token operator">=</span> <span class="token variable">$collection</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$resource</span> <span class="token operator">=</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">pipeInto</span><span class="token punctuation">(</span><span class="token class-name static-context">ResourceCollection</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$resource</span><span class="token operator">-&gt;</span><span class="token property">collection</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// [1, 2, 3]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>',5),U={href:"https://github.com/laravel/framework/pull/34600",target:"_blank",rel:"noopener noreferrer"},C=(0,t.Uk)("https://github.com/laravel/framework/pull/34600"),I={href:"https://readouble.com/laravel/8.x/ja/collections.html#method-pipeinto",target:"_blank",rel:"noopener noreferrer"},A=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/collections.html#method-pipeinto"),E=(0,t.uE)('<h2 id="httpクライアントでuseragentをセットするwithuseragent-メソッドが追加" tabindex="-1"><a class="header-anchor" href="#httpクライアントでuseragentをセットするwithuseragent-メソッドが追加" aria-hidden="true">#</a> HttpクライアントでuserAgentをセットする<code>withUserAgent()</code>メソッドが追加</h2><ul><li>v8.8.0</li><li>src/Illuminate/Collections/Traits/EnumeratesValues.php</li></ul><p>Before</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;User-Agent&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$userAgent</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>After</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withUserAgent</span><span class="token punctuation">(</span><span class="token variable">$userAgent</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',6),P={href:"https://github.com/laravel/framework/pull/34611",target:"_blank",rel:"noopener noreferrer"},T=(0,t.Uk)("https://github.com/laravel/framework/pull/34611"),W=(0,t._)("h2",{id:"スケジュールをローカルで実行できるphp-artisan-schedule-workが追加",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#スケジュールをローカルで実行できるphp-artisan-schedule-workが追加","aria-hidden":"true"},"#"),(0,t.Uk)(" スケジュールをローカルで実行できる"),(0,t._)("code",null,"php artisan schedule:work"),(0,t.Uk)("が追加")],-1),H=(0,t._)("p",null,[(0,t.Uk)("今まではスケジュールを動かすのに"),(0,t._)("code",null,"schedule:run"),(0,t.Uk)("コマンドをcronに登録しておく必要がありましたが、ローカルからフォアグラウンドで動かしておける"),(0,t._)("code",null,"schedule:work"),(0,t.Uk)("が追加されました。")],-1),z=(0,t._)("p",null,"これは結構便利ですね",-1),J={href:"https://github.com/laravel/framework/pull/34618",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Uk)("https://github.com/laravel/framework/pull/34618"),R={href:"https://readouble.com/laravel/8.x/ja/scheduling.html#running-the-scheduler-locally",target:"_blank",rel:"noopener noreferrer"},S=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/scheduling.html#running-the-scheduler-locally"),B=(0,t.uE)('<h2 id="paginatorのアイテムを変換できるthrough-メソッドが追加" tabindex="-1"><a class="header-anchor" href="#paginatorのアイテムを変換できるthrough-メソッドが追加" aria-hidden="true">#</a> paginatorのアイテムを変換できる<code>through()</code>メソッドが追加</h2><ul><li>v8.9.0</li><li>src/Illuminate/Pagination/AbstractPaginator.php</li></ul><p>今までは<code>$paginator-&gt;getCollection()-&gt;transform()</code>なんてしていましたが、その必要も無くなりました</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token class-name static-context">Inertia</span><span class="token operator">::</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Contacts/Index&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string single-quoted-string">&#39;contacts&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name static-context">Contact</span><span class="token operator">::</span><span class="token function">paginate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">through</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$contact</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$contact</span><span class="token operator">-&gt;</span><span class="token property">id</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$contact</span><span class="token operator">-&gt;</span><span class="token property">name</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;phone&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$contact</span><span class="token operator">-&gt;</span><span class="token property">phone</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;city&#39;</span> <span class="token operator">=&gt;</span> <span class="token variable">$contact</span><span class="token operator">-&gt;</span><span class="token property">city</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;organization&#39;</span> <span class="token operator">=&gt;</span> <span class="token function">optional</span><span class="token punctuation">(</span><span class="token variable">$contact</span><span class="token operator">-&gt;</span><span class="token property">organization</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">only</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',4),D={href:"https://github.com/laravel/framework/pull/34657",target:"_blank",rel:"noopener noreferrer"},M=(0,t.Uk)("https://github.com/laravel/framework/pull/34657"),O={},Q=(0,a(3744).Z)(O,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[(0,t._)("a",e,[o,(0,t.Wm)(a)])]),l,(0,t._)("p",null,[(0,t._)("a",c,[r,(0,t.Wm)(a)])]),u,(0,t._)("p",null,[(0,t._)("a",i,[k,(0,t.Wm)(a)])]),b,(0,t._)("p",null,[(0,t._)("a",d,[g,(0,t.Wm)(a)])]),m,h,v,(0,t._)("p",null,[(0,t._)("a",f,[q,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",_,[w,(0,t.Wm)(a)])]),y,(0,t._)("p",null,[(0,t._)("a",$,[x,(0,t.Wm)(a)])]),j,(0,t._)("p",null,[(0,t._)("a",U,[C,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",I,[A,(0,t.Wm)(a)])]),E,(0,t._)("p",null,[(0,t._)("a",P,[T,(0,t.Wm)(a)])]),W,H,z,(0,t._)("p",null,[(0,t._)("a",J,[L,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",R,[S,(0,t.Wm)(a)])]),B,(0,t._)("p",null,[(0,t._)("a",D,[M,(0,t.Wm)(a)])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);