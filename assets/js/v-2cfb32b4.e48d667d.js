"use strict";(self.webpackChunklaravel_update_info=self.webpackChunklaravel_update_info||[]).push([[382],{5674:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2cfb32b4",path:"/laravel8/v8.10-v8.19/",title:"v8.10-v8.19",lang:"ja-JP",frontmatter:{},excerpt:"",headers:[{level:2,title:"Eloquentやクエリービルダでupsertが使えるように",slug:"eloquentやクエリービルダでupsertが使えるように",children:[]},{level:2,title:"バリデーションで倍数のチェックができるように",slug:"バリデーションで倍数のチェックができるように",children:[]},{level:2,title:"マイグレーションで外部キー制約のカラム削除が簡単に",slug:"マイグレーションで外部キー制約のカラム削除が簡単に",children:[]},{level:2,title:"Eloquentのcastsにencryptedが使えるように",slug:"eloquentのcastsにencryptedが使えるように",children:[]},{level:2,title:"リレーションのクエリにwithMax()|withMin()|withSum()|withAvg()メソッドが追加",slug:"リレーションのクエリにwithmax-withmin-withsum-withavg-メソッドが追加",children:[]},{level:2,title:"Eloquentやクエリービルダでexplainが使えるように",slug:"eloquentやクエリービルダでexplainが使えるように",children:[]},{level:2,title:"ルーティングに正規表現メソッドが追加",slug:"ルーティングに正規表現メソッドが追加",children:[]},{level:2,title:"EloquentのCollectionにloadMax()|loadMin()|loadSum()|loadAvg()メソッド追加。EloquentにloadMax()|loadMin()|loadSum()|loadAvg()|loadMorphMax()|loadMorphMin()|loadMorphSum()|loadMorphAvg()メソッド追加",slug:"eloquentのcollectionにloadmax-loadmin-loadsum-loadavg-メソッド追加。eloquentにloadmax-loadmin-loadsum-loadavg-loadmorphmax-loadmorphmin-loadmorphsum-loadmorphavg-メソッド追加",children:[]},{level:2,title:"Eloquentのcastsencryptedで使用する暗号鍵を設定できるModel::encryptUsing()が追加",slug:"eloquentのcastsencryptedで使用する暗号鍵を設定できるmodel-encryptusing-が追加",children:[]},{level:2,title:"HttpのResponseを返す際に指定のクッキーを無くすwithoutCookie()メソッドが追加",slug:"httpのresponseを返す際に指定のクッキーを無くすwithoutcookie-メソッドが追加",children:[]},{level:2,title:"アップロードファイルのテスト時にexistsと合わせてcontentもチェックできるように",slug:"アップロードファイルのテスト時にexistsと合わせてcontentもチェックできるように",children:[]},{level:2,title:"Collectionで複数ソートができるように",slug:"collectionで複数ソートができるように",children:[]},{level:2,title:"artisanを介してDBに接続できるphp artisan dbが追加",slug:"artisanを介してdbに接続できるphp-artisan-dbが追加",children:[]},{level:2,title:"factoryで、存在する親モデルのインスタンスを紐付けするサポートが追加",slug:"factoryで、存在する親モデルのインスタンスを紐付けするサポートが追加",children:[]},{level:2,title:"メール本文の内容をテストするためのメソッドがいくつか追加",slug:"メール本文の内容をテストするためのメソッドがいくつか追加",children:[]},{level:2,title:"スケジュール一覧を表示するphp artisan schedule:listが追加",slug:"スケジュール一覧を表示するphp-artisan-schedule-listが追加",children:[]},{level:2,title:"ジョブデータを暗号化できるように",slug:"ジョブデータを暗号化できるように",children:[]}],filePathRelative:"laravel8/v8.10-v8.19/README.md",git:{updatedTime:1639753532e3,contributors:[{name:"okdyy75",email:"okdyy75@gmail.com",commits:1}]}}},7969:(n,s,a)=>{a.r(s),a.d(s,{default:()=>fn});var t=a(6252);const p=(0,t.uE)('<h1 id="v8-10-v8-19" tabindex="-1"><a class="header-anchor" href="#v8-10-v8-19" aria-hidden="true">#</a> v8.10-v8.19</h1><h2 id="eloquentやクエリービルダでupsertが使えるように" tabindex="-1"><a class="header-anchor" href="#eloquentやクエリービルダでupsertが使えるように" aria-hidden="true">#</a> Eloquentやクエリービルダでupsertが使えるように</h2><ul><li>v8.10.0</li><li>src/Illuminate/Database/Query/Builder.php</li></ul><p>MySQLの場合on duplicate key updateを使っており、uniqueかprimary keyが必要なので注意</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">upsert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;taylor@example.com&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;dayle@example.com&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',5),e={href:"https://github.com/laravel/framework/pull/34698",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("https://github.com/laravel/framework/pull/34698"),l={href:"https://readouble.com/laravel/8.x/ja/queries.html#upserts",target:"_blank",rel:"noopener noreferrer"},c=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/queries.html#upserts"),u=(0,t.uE)('<h2 id="バリデーションで倍数のチェックができるように" tabindex="-1"><a class="header-anchor" href="#バリデーションで倍数のチェックができるように" aria-hidden="true">#</a> バリデーションで倍数のチェックができるように</h2><ul><li>v8.10.0</li><li>src/Illuminate/Validation/Concerns/ValidatesAttributes.php</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>number<span class="token punctuation">&quot;</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>foo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">return</span> <span class="token punctuation">[</span>\n\t\t<span class="token string single-quoted-string">&#39;foo&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>\n\t\t\t<span class="token string single-quoted-string">&#39;multiple_of:0.5&#39;</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">]</span>\n\t<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',4),i={href:"https://github.com/laravel/framework/pull/34788",target:"_blank",rel:"noopener noreferrer"},r=(0,t.Uk)("https://github.com/laravel/framework/pull/34788"),k=(0,t.uE)('<h2 id="マイグレーションで外部キー制約のカラム削除が簡単に" tabindex="-1"><a class="header-anchor" href="#マイグレーションで外部キー制約のカラム削除が簡単に" aria-hidden="true">#</a> マイグレーションで外部キー制約のカラム削除が簡単に</h2><ul><li>v8.10.0</li><li>src/Illuminate/Database/Schema/Blueprint.php</li></ul><p>Before</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">AddCategoryIdToPostsTable</span> <span class="token keyword">extends</span> <span class="token class-name">Migration</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">dropForeign</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;category_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t<span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">dropColumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>After</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">class</span> <span class="token class-name-definition class-name">AddCategoryIdToPostsTable</span> <span class="token keyword">extends</span> <span class="token class-name">Migration</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token class-name static-context">Schema</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Blueprint</span> <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token variable">$table</span><span class="token operator">-&gt;</span><span class="token function">dropConstrainedForeignId</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',6),d={href:"https://github.com/laravel/framework/pull/34806",target:"_blank",rel:"noopener noreferrer"},b=(0,t.Uk)("https://github.com/laravel/framework/pull/34806"),m=(0,t.uE)('<h2 id="eloquentのcastsにencryptedが使えるように" tabindex="-1"><a class="header-anchor" href="#eloquentのcastsにencryptedが使えるように" aria-hidden="true">#</a> Eloquentのcastsに<code>encrypted</code>が使えるように</h2><ul><li>v8.12.0</li><li>src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php</li></ul><p>以前はアクセサやカスタムキャストを作る必要がありましたが、直接指定できるようになりました</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token variable">$casts</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n\t<span class="token string single-quoted-string">&#39;access_token&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;encrypted&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',4),g={href:"https://github.com/laravel/framework/pull/34937",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("https://github.com/laravel/framework/pull/34937"),v=(0,t.uE)('<h2 id="リレーションのクエリにwithmax-withmin-withsum-withavg-メソッドが追加" tabindex="-1"><a class="header-anchor" href="#リレーションのクエリにwithmax-withmin-withsum-withavg-メソッドが追加" aria-hidden="true">#</a> リレーションのクエリに<code>withMax()</code>|<code>withMin()</code>|<code>withSum()</code>|<code>withAvg()</code>メソッドが追加</h2><ul><li>v8.12.0</li><li>src/Illuminate/Database/Eloquent/Concerns/QueriesRelationships.php</li></ul><p>発行されるSQLはサブクエリなので注意</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withCount</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;comments&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withMax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;comments&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withMin</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;comments&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withSum</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;comments&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">withAvg</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;comments&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',4),f={href:"https://github.com/laravel/framework/pull/34965",target:"_blank",rel:"noopener noreferrer"},y=(0,t.Uk)("https://github.com/laravel/framework/pull/34965"),q={href:"https://readouble.com/laravel/8.x/ja/eloquent-relationships.html#other-aggregate-functions",target:"_blank",rel:"noopener noreferrer"},w=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/eloquent-relationships.html#other-aggregate-functions"),x=(0,t.uE)('<h2 id="eloquentやクエリービルダでexplainが使えるように" tabindex="-1"><a class="header-anchor" href="#eloquentやクエリービルダでexplainが使えるように" aria-hidden="true">#</a> Eloquentやクエリービルダでexplainが使えるように</h2><ul><li>v8.12.0</li><li>src/Illuminate/Database/Concerns/ExplainsQueries.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token class-name static-context">DB</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;Illia Sakovich&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">explain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token operator">=&gt;</span> Illuminate\\Support\\Collection <span class="token punctuation">{</span><span class="token comment">#5348</span>\n\t all<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n\t\t<span class="token punctuation">{</span><span class="token comment">#5342</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;select_type&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;SIMPLE&quot;</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;table&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;users&quot;</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;partitions&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;ALL&quot;</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;possible_keys&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;key&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;key_len&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;ref&quot;</span><span class="token punctuation">:</span> <span class="token constant">null</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;rows&quot;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;filtered&quot;</span><span class="token punctuation">:</span> <span class="token number">11.11111164093</span><span class="token punctuation">,</span>\n\t\t <span class="token operator">+</span><span class="token string double-quoted-string">&quot;Extra&quot;</span><span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;Using where&quot;</span><span class="token punctuation">,</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>',3),_={href:"https://github.com/laravel/framework/pull/34969",target:"_blank",rel:"noopener noreferrer"},$=(0,t.Uk)("https://github.com/laravel/framework/pull/34969"),M=(0,t.uE)('<h2 id="ルーティングに正規表現メソッドが追加" tabindex="-1"><a class="header-anchor" href="#ルーティングに正規表現メソッドが追加" aria-hidden="true">#</a> ルーティングに正規表現メソッドが追加</h2><ul><li>v8.12.0</li><li>src/Illuminate/Routing/RouteRegexConstraintTrait.php</li></ul><p><code>whereNumber</code>|<code>whereAlpha</code>|<code>whereAlphaNumeric</code>|<code>whereUuid</code>などが使えるようです</p><p>Before</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;authors/{author}/{book}&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;author&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;[0-9]+&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;book&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;[a-zA-Z]+&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>After</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;authors/{author}/{book}&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereNumber</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;author&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereString</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;book&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),E={href:"https://github.com/laravel/framework/pull/34997",target:"_blank",rel:"noopener noreferrer"},S=(0,t.Uk)("https://github.com/laravel/framework/pull/34997"),U={href:"https://readouble.com/laravel/8.x/ja/routing.html#parameters-regular-expression-constraints",target:"_blank",rel:"noopener noreferrer"},A=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/routing.html#parameters-regular-expression-constraints"),C=(0,t.uE)('<h2 id="eloquentのcollectionにloadmax-loadmin-loadsum-loadavg-メソッド追加。eloquentにloadmax-loadmin-loadsum-loadavg-loadmorphmax-loadmorphmin-loadmorphsum-loadmorphavg-メソッド追加" tabindex="-1"><a class="header-anchor" href="#eloquentのcollectionにloadmax-loadmin-loadsum-loadavg-メソッド追加。eloquentにloadmax-loadmin-loadsum-loadavg-loadmorphmax-loadmorphmin-loadmorphsum-loadmorphavg-メソッド追加" aria-hidden="true">#</a> EloquentのCollectionに<code>loadMax()</code>|<code>loadMin()</code>|<code>loadSum()</code>|<code>loadAvg()</code>メソッド追加。Eloquentに<code>loadMax()</code>|<code>loadMin()</code>|<code>loadSum()</code>|<code>loadAvg()</code>|<code>loadMorphMax()</code>|<code>loadMorphMin()</code>|<code>loadMorphSum()</code>|<code>loadMorphAvg()</code>メソッド追加</h2><ul><li>v8.13.0</li><li>src/Illuminate/Database/Eloquent/Collection.php</li><li>src/Illuminate/Database/Eloquent/Model.php</li></ul><p>これも便利ですが、サブクエリとして発行されるので注意</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>\t<span class="token comment">//Eloquent/Collection</span>\n\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadAggregate</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">,</span> <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadCount</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span> <span class="token comment">//Just modified.</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMax</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMin</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadSum</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadAvg</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>\t<span class="token comment">//Eloquent/Model</span>\n\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadAggregate</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">,</span> <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadCount</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span> <span class="token comment">//Just modified.</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMax</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMin</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadSum</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadAvg</span><span class="token punctuation">(</span><span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphAggregate</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">,</span> <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphCount</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span> <span class="token comment">//Just modified.</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphMax</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphMin</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphSum</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMorphAvg</span><span class="token punctuation">(</span><span class="token variable">$relation</span><span class="token punctuation">,</span> <span class="token variable">$relations</span><span class="token punctuation">,</span> <span class="token variable">$column</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>こんな感じで使えます</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>\t<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">loadCount</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">loadMax</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;posts&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;created_at&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',7),I={href:"https://github.com/laravel/framework/pull/35029",target:"_blank",rel:"noopener noreferrer"},W=(0,t.Uk)("https://github.com/laravel/framework/pull/35029"),j={href:"https://readouble.com/laravel/8.x/ja/eloquent-relationships.html#deferred-count-loading",target:"_blank",rel:"noopener noreferrer"},D=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/eloquent-relationships.html#deferred-count-loading"),P=(0,t.uE)('<h2 id="eloquentのcastsencryptedで使用する暗号鍵を設定できるmodel-encryptusing-が追加" tabindex="-1"><a class="header-anchor" href="#eloquentのcastsencryptedで使用する暗号鍵を設定できるmodel-encryptusing-が追加" aria-hidden="true">#</a> Eloquentのcasts<code>encrypted</code>で使用する暗号鍵を設定できる<code>Model::encryptUsing()</code>が追加</h2><ul><li>v8.14.0</li><li>src/Illuminate/Database/Eloquent/Concerns/HasAttributes.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Database<span class="token punctuation">\\</span>Eloquent<span class="token punctuation">\\</span>Model</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Encryption<span class="token punctuation">\\</span>Encrypter</span><span class="token punctuation">;</span>\n\n<span class="token variable">$databaseEncryptionKey</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;database.encryption_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$encrypter</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Encrypter</span><span class="token punctuation">(</span><span class="token variable">$databaseEncryptionKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token class-name static-context">Model</span><span class="token operator">::</span><span class="token function">encryptUsing</span><span class="token punctuation">(</span><span class="token variable">$encrypter</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>',3),B={href:"https://github.com/laravel/framework/pull/35080",target:"_blank",rel:"noopener noreferrer"},T=(0,t.Uk)("https://github.com/laravel/framework/pull/35080"),R=(0,t.uE)('<h2 id="httpのresponseを返す際に指定のクッキーを無くすwithoutcookie-メソッドが追加" tabindex="-1"><a class="header-anchor" href="#httpのresponseを返す際に指定のクッキーを無くすwithoutcookie-メソッドが追加" aria-hidden="true">#</a> HttpのResponseを返す際に指定のクッキーを無くす<code>withoutCookie()</code>メソッドが追加</h2><ul><li>v8.15.0</li><li>src/Illuminate/Http/ResponseTrait.php</li></ul><p>単純に有効期限切れにする感じです</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>\t<span class="token doc-comment comment">/**\n\t * Expire a cookie when sending the response.\n\t *\n\t * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token punctuation">\\</span>Symfony<span class="token punctuation">\\</span>Component<span class="token punctuation">\\</span>HttpFoundation<span class="token punctuation">\\</span>Cookie<span class="token punctuation">|</span><span class="token keyword">mixed</span></span>  <span class="token parameter">$cookie</span>\n\t * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span><span class="token keyword">null</span></span> <span class="token parameter">$path</span>\n\t * <span class="token keyword">@param</span>  <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">|</span><span class="token keyword">null</span></span> <span class="token parameter">$domain</span>\n\t * <span class="token keyword">@return</span> $this\n\t */</span>\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">withoutCookie</span><span class="token punctuation">(</span><span class="token variable">$cookie</span><span class="token punctuation">,</span> <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token variable">$domain</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$cookie</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;cookie&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token variable">$cookie</span> <span class="token operator">=</span> <span class="token function">cookie</span><span class="token punctuation">(</span><span class="token variable">$cookie</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2628000</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">,</span> <span class="token variable">$domain</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\n\t\t<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">headers</span><span class="token operator">-&gt;</span><span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token variable">$cookie</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',4),O={href:"https://github.com/laravel/framework/commit/e9483c441d5f0c8598d438d6024db8b1a7aa55fe",target:"_blank",rel:"noopener noreferrer"},H=(0,t.Uk)("https://github.com/laravel/framework/commit/e9483c441d5f0c8598d438d6024db8b1a7aa55fe"),Q=(0,t.uE)('<h2 id="アップロードファイルのテスト時にexistsと合わせてcontentもチェックできるように" tabindex="-1"><a class="header-anchor" href="#アップロードファイルのテスト時にexistsと合わせてcontentもチェックできるように" aria-hidden="true">#</a> アップロードファイルのテスト時にexistsと合わせてcontentもチェックできるように</h2><ul><li>v8.15.0</li><li>src/Illuminate/Filesystem/FilesystemAdapter.php</li></ul><p>Before</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;reports&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assertSame</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my;csv;content&#39;</span><span class="token punctuation">,</span> <span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;reports&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo.csv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>After</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name static-context">Storage</span><span class="token operator">::</span><span class="token function">disk</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;reports&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">assertExists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;foo.csv&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;my;csv;content&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="collectionで複数ソートができるように" tabindex="-1"><a class="header-anchor" href="#collectionで複数ソートができるように" aria-hidden="true">#</a> Collectionで複数ソートができるように</h2><ul><li>v8.16.0</li><li>src/Illuminate/Collections/Collection.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$collection</span> <span class="token operator">=</span> <span class="token function">collect</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Taylor Otwell&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Abigail Otwell&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Taylor Otwell&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Abigail Otwell&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;age&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$sorted</span> <span class="token operator">=</span> <span class="token variable">$collection</span><span class="token operator">-&gt;</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;asc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t<span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;desc&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$sorted</span><span class="token operator">-&gt;</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/*\n\t[\n\t\t[&#39;name&#39; =&gt; &#39;Abigail Otwell&#39;, &#39;age&#39; =&gt; 32],\n\t\t[&#39;name&#39; =&gt; &#39;Abigail Otwell&#39;, &#39;age&#39; =&gt; 30],\n\t\t[&#39;name&#39; =&gt; &#39;Taylor Otwell&#39;, &#39;age&#39; =&gt; 36],\n\t\t[&#39;name&#39; =&gt; &#39;Taylor Otwell&#39;, &#39;age&#39; =&gt; 34],\n\t]\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>',9),F={href:"https://github.com/laravel/framework/pull/35277",target:"_blank",rel:"noopener noreferrer"},L=(0,t.Uk)("https://github.com/laravel/framework/pull/35277"),N={href:"https://readouble.com/laravel/8.x/ja/collections.html#method-sortby",target:"_blank",rel:"noopener noreferrer"},J=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/collections.html#method-sortby"),V=(0,t._)("h2",{id:"artisanを介してdbに接続できるphp-artisan-dbが追加",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#artisanを介してdbに接続できるphp-artisan-dbが追加","aria-hidden":"true"},"#"),(0,t.Uk)(" artisanを介してDBに接続できる"),(0,t._)("code",null,"php artisan db"),(0,t.Uk)("が追加")],-1),Z=(0,t._)("ul",null,[(0,t._)("li",null,"v8.16.0"),(0,t._)("li",null,"src/Illuminate/Database/Console/DbCommand.php")],-1),K=(0,t._)("p",null,"mysql-clientなどインストールされている必要があるので注意！",-1),z={href:"https://github.com/laravel/framework/pull/35304",target:"_blank",rel:"noopener noreferrer"},Y=(0,t.Uk)("https://github.com/laravel/framework/pull/35304"),G=(0,t.uE)('<h2 id="factoryで、存在する親モデルのインスタンスを紐付けするサポートが追加" tabindex="-1"><a class="header-anchor" href="#factoryで、存在する親モデルのインスタンスを紐付けするサポートが追加" aria-hidden="true">#</a> factoryで、存在する親モデルのインスタンスを紐付けするサポートが追加</h2><ul><li>v8.18.0</li><li>src/Illuminate/Database/Eloquent/Factories/Factory.php</li></ul><p>factoryを作成する際にforでは親のfactoryを渡す方法だけでしたが</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Post</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>\n\n<span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n\t\t\t\t<span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Jessica Archer&#39;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>親のモデルインスタンスを渡して紐付けできるように</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$posts</span> <span class="token operator">=</span> <span class="token class-name static-context">Post</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span>\n\t\t\t<span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',6),X={href:"https://github.com/laravel/framework/pull/35494",target:"_blank",rel:"noopener noreferrer"},nn=(0,t.Uk)("https://github.com/laravel/framework/pull/35494"),sn={href:"https://readouble.com/laravel/8.x/ja/database-testing.html#belongs-to-relationships",target:"_blank",rel:"noopener noreferrer"},an=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/database-testing.html#belongs-to-relationships"),tn=(0,t.uE)('<h2 id="メール本文の内容をテストするためのメソッドがいくつか追加" tabindex="-1"><a class="header-anchor" href="#メール本文の内容をテストするためのメソッドがいくつか追加" aria-hidden="true">#</a> メール本文の内容をテストするためのメソッドがいくつか追加</h2><ul><li>v8.18.0</li><li>src/Illuminate/Mail/Mailable.php</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Mail<span class="token punctuation">\\</span>InvoicePaid</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">test_mailable_content</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token variable">$mailable</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InvoicePaid</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token variable">$mailable</span><span class="token operator">-&gt;</span><span class="token function">assertSeeInHtml</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token variable">$mailable</span><span class="token operator">-&gt;</span><span class="token function">assertSeeInHtml</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Invoice Paid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token variable">$mailable</span><span class="token operator">-&gt;</span><span class="token function">assertSeeInText</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token variable">$mailable</span><span class="token operator">-&gt;</span><span class="token function">assertSeeInText</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Invoice Paid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',3),pn={href:"https://github.com/laravel/framework/commit/afb858ad9c944bd3f9ad56c3e4485527d77a7327",target:"_blank",rel:"noopener noreferrer"},en=(0,t.Uk)("https://github.com/laravel/framework/commit/afb858ad9c944bd3f9ad56c3e4485527d77a7327"),on={href:"https://readouble.com/laravel/8.x/ja/mail.html#testing-mailables",target:"_blank",rel:"noopener noreferrer"},ln=(0,t.Uk)("https://readouble.com/laravel/8.x/ja/mail.html#testing-mailables"),cn=(0,t._)("h2",{id:"スケジュール一覧を表示するphp-artisan-schedule-listが追加",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#スケジュール一覧を表示するphp-artisan-schedule-listが追加","aria-hidden":"true"},"#"),(0,t.Uk)(" スケジュール一覧を表示する"),(0,t._)("code",null,"php artisan schedule:list"),(0,t.Uk)("が追加")],-1),un=(0,t._)("ul",null,[(0,t._)("li",null,"v8.19.0"),(0,t._)("li",null,"src/Illuminate/Console/Scheduling/ScheduleListCommand.php")],-1),rn={href:"https://github.com/laravel/framework/pull/35574",target:"_blank",rel:"noopener noreferrer"},kn=(0,t.Uk)("https://github.com/laravel/framework/pull/35574"),dn=(0,t.uE)('<h2 id="ジョブデータを暗号化できるように" tabindex="-1"><a class="header-anchor" href="#ジョブデータを暗号化できるように" aria-hidden="true">#</a> ジョブデータを暗号化できるように</h2><ul><li>v8.19.0</li><li>src/Illuminate/Contracts/Queue/ShouldBeEncrypted.php</li></ul><p>jobsテーブルのpayloadを見ると大体の内容がわかってしまうが、ShouldBeEncryptedを実装してあげれば暗号可能に</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Illuminate<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>Queue<span class="token punctuation">\\</span>ShouldBeEncrypted</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name-definition class-name">VerifyUser</span> <span class="token keyword">implements</span> <span class="token class-name">ShouldQueue</span><span class="token punctuation">,</span> ShouldBeEncrypted\n<span class="token punctuation">{</span>\n\t<span class="token keyword">private</span> <span class="token variable">$user</span><span class="token punctuation">;</span>\n\t<span class="token keyword">private</span> <span class="token variable">$socialSecurityNumber</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$socialSecurityNumber</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">{</span>\n\t\t<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token punctuation">;</span>\n\t\t<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">socialSecurityNumber</span> <span class="token operator">=</span> <span class="token variable">$socialSecurityNumber</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',4),bn={href:"https://github.com/laravel/framework/pull/35527",target:"_blank",rel:"noopener noreferrer"},mn=(0,t.Uk)("https://github.com/laravel/framework/pull/35527"),gn={href:"https://divinglaravel.com/job-encryption-in-laravel",target:"_blank",rel:"noopener noreferrer"},hn=(0,t.Uk)("https://divinglaravel.com/job-encryption-in-laravel"),vn={},fn=(0,a(3744).Z)(vn,[["render",function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[(0,t._)("a",e,[o,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",l,[c,(0,t.Wm)(a)])]),u,(0,t._)("p",null,[(0,t._)("a",i,[r,(0,t.Wm)(a)])]),k,(0,t._)("p",null,[(0,t._)("a",d,[b,(0,t.Wm)(a)])]),m,(0,t._)("p",null,[(0,t._)("a",g,[h,(0,t.Wm)(a)])]),v,(0,t._)("p",null,[(0,t._)("a",f,[y,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",q,[w,(0,t.Wm)(a)])]),x,(0,t._)("p",null,[(0,t._)("a",_,[$,(0,t.Wm)(a)])]),M,(0,t._)("p",null,[(0,t._)("a",E,[S,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",U,[A,(0,t.Wm)(a)])]),C,(0,t._)("p",null,[(0,t._)("a",I,[W,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",j,[D,(0,t.Wm)(a)])]),P,(0,t._)("p",null,[(0,t._)("a",B,[T,(0,t.Wm)(a)])]),R,(0,t._)("p",null,[(0,t._)("a",O,[H,(0,t.Wm)(a)])]),Q,(0,t._)("p",null,[(0,t._)("a",F,[L,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",N,[J,(0,t.Wm)(a)])]),V,Z,K,(0,t._)("p",null,[(0,t._)("a",z,[Y,(0,t.Wm)(a)])]),G,(0,t._)("p",null,[(0,t._)("a",X,[nn,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",sn,[an,(0,t.Wm)(a)])]),tn,(0,t._)("p",null,[(0,t._)("a",pn,[en,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",on,[ln,(0,t.Wm)(a)])]),cn,un,(0,t._)("p",null,[(0,t._)("a",rn,[kn,(0,t.Wm)(a)])]),dn,(0,t._)("p",null,[(0,t._)("a",bn,[mn,(0,t.Wm)(a)])]),(0,t._)("p",null,[(0,t._)("a",gn,[hn,(0,t.Wm)(a)])])],64)}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);